<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>thehue</title>
 <link href="https://thehue.github.io/atom.xml" rel="self"/>
 <link href="https://thehue.github.io/"/>
 <updated>2022-05-02T20:40:02+09:00</updated>
 <id>https://thehue.github.io</id>
 <author>
   <name>thehue</name>
   <email>gouk32@naver.com</email>
 </author>

 
 <entry>
   <title>TIL 클린코드 - 5장. 형식 맞추기</title>
   <link href="https://thehue.github.io/2022/05/02/til-%ED%81%B4%EB%A6%B0%EC%BD%94%EB%93%9C-5%EC%9E%A5-%ED%98%95%EC%8B%9D"/>
   <updated>2022-05-02T00:00:00+09:00</updated>
   <id>https://thehue.github.io/2022/05/02/TIL 클린코드 - 5장.형식</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;TIL (Today I Learned)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;2022.05.02&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;오늘 읽은 범위&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;5장. 형식 맞추기&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;책에서 기억하고 싶은 내용을 써보세요.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;형식을 맞추는 목적&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;코드 형식은 의사소통의 일환이다. 의사소통은 전문 개발자의 일차적인 의무이다.&lt;/li&gt;
      &lt;li&gt;오랜 시간이 지나 원래 코드의 흔적을 더 이상 찾아보기 어려울 정도로 코드가 바뀌어도 맨 처음 잡아 놓은 구현 스타일과 가독성 수준은 유지보수 용이성과 확장성에 계속 영향을 미친다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;신문 기사처럼 작성하라&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;소스파일의 이름은 이름만 보고도 올바른 모듈을 살펴보고 있는지 아닌지를 판단할 정도로 신경 써서 짓는다.&lt;/li&gt;
      &lt;li&gt;소스파일 첫 부분은 &lt;a href=&quot;https://developer-talk.tistory.com/162&quot;&gt;고차원 개념&lt;/a&gt;과 알고리즘을 설명한다. 아래로 내려갈수록 의도를 세세하게 묘사한다.&lt;/li&gt;
      &lt;li&gt;마지막에는 가장 저차원 함수와 세부 내역이 나온다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;개념은 빈 행으로 분리하라&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;빈 행은 새로운 개념을 시작한다는 시각적 단서다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;세로 밀집도&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;세로 밀집도는 연관성을 의미한다. 서로 밀접한 코드 행은 세로로 가까이 놓여야 한다는 뜻이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;수직 거리&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;같은 파일에 속할 정도로 밀접한 두 개념은 세로 거리로 연관성을 표현한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;변수 선언&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;변수는 사용하는 위치에 최대한 가까이 선언한다. 지역 변수는 각 함수 맨 처음에 선언한다.&lt;/li&gt;
      &lt;li&gt;루프를 제어하는 변수는 루프 문 내부에 선언한다.&lt;/li&gt;
      &lt;li&gt;아주 드물지만 다소 긴 함수에서 블록 상단이나 루프 직전에 변수를 선언하는 사례도 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;인스턴스 변수&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4_%EB%B3%80%EC%88%98&quot;&gt;인스턴스 변수&lt;/a&gt;는 클래스 맨 처음에 선언한다. 변수 간에 세로로 거리를 두지 않는다. 잘 설계한 클래스는 많은 클래스 메서드가 인스턴트 변수를 사용하기 때문이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;종속 변수&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;한 함수가 다른 함수를 호출한다면 두 함수는 세로로 가까이 배치한다. 또한 가능하다면 호출하는 함수를 호출되는 함수보다 먼저 배치한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;세로 순서&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;호출되는 함수를 호출하는 함수보다 나중에 배치한다. 그러면 소스 코드 모듈이 고차원에서 저차원으로 자연스럽게 내려간다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;오늘 읽은 소감은? 떠오르는 생각을 가볍게 적어보세요&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;책의 형식을 지키지 않은 예시를 보면서 코드 형식을 지키는 것이 가독성에 많은 영향을 끼친다는 것을 더 체감할 수 있었다.&lt;/li&gt;
  &lt;li&gt;javascript 개발의 경우 prettier로 자동 formatting을 해주는데 오늘 다양한 예제를 보면서 prettier를 개발한 개발자에게 감사함을 느꼈다.🙏🏻&lt;/li&gt;
  &lt;li&gt;책에서 특히 공감 됐던 구절은 &lt;em&gt;‘팀에 속한다면 자신이 선호해야 할 규칙은 바로 팀 규칙이다’&lt;/em&gt; 이다. 전에 있었던 회사의 개발자 분이 코드를 리뷰 해주시면서 전체 코드가 마치 한 사람이 작성한 것처럼 코드를 작성해야한다고 말씀해주셨던 기억이 난다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;궁금한 내용이 있거나, 잘 이해되지 않는 내용이 있다면 적어보세요.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;일반적으로 C++ 에서는 모든 인스턴스 변수를 클래스 마지막에 선언한다는 소위 가위 규칙을 적용한다.
    &lt;ul&gt;
      &lt;li&gt;가위 규칙 어렵다..🥲&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL 클린코드 - 4장. 주석</title>
   <link href="https://thehue.github.io/2022/04/29/til-%ED%81%B4%EB%A6%B0%EC%BD%94%EB%93%9C-4%EC%9E%A5-%EC%A3%BC%EC%84%9D"/>
   <updated>2022-04-29T00:00:00+09:00</updated>
   <id>https://thehue.github.io/2022/04/29/TIL 클린코드 - 4장.주석</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;TIL (Today I Learned)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;2022.04.29&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;오늘 읽은 범위&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;4장. 주석&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;책에서 기억하고 싶은 내용을 써보세요.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;주석은 언제나 실패를 의미한다. 때때로 주석 없이는 자신을 표현할 방법을 찾지 못해 할 수 없이 주석을 사용한다. 코드로 의도를 표현할 방법은 없을까?(p.68)&lt;/li&gt;
  &lt;li&gt;표현력이 풍부하고 깔끔하며 주석이 거의 없는 코드가, 복잡하고 어수선하며 주석이 많이 달린 코드보다 훨신 좋다. 자신이 저지른 난장판을 주석으로 설명하려 애쓰는 대신에 그 난장판을 깨끗이 치우는 데 시간을 보내라!(p.69)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다음 코드 예제 두 개를 살펴보자. 어느 쪽이 더 나은가? (p.70)&lt;/p&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 직원에게 복지 혜택을 받을 자격이 있는지 검사한다.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;employee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HOURLY_FLAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;employee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;다음 코드는 어떤가?&lt;/p&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;employee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEligibleForFullBenefits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;법적인 주석 - 각 소스 파일 첫머리에 주석으로 들어가는 저작권 정보와 소유권 정보는 필요하고도 타당하다. (p.70)&lt;/li&gt;
  &lt;li&gt;정보를 제공하는 주석 - 함수 이름에 정보를 담는 편이 좋다.&lt;/li&gt;
  &lt;li&gt;의도를 설명하는 주석 - 때때로 주석은 구현을 이해하게 도와주는 선을 넘어 결정에 깔린 의도까지 설명한다.&lt;/li&gt;
  &lt;li&gt;의미를 명료하게 밝히는 주석 - 일반적으로는 인수나 반환값 자체를 명확하게 만들면 더 좋겠지만, 인수나 반환값이 표준 라이브러리나 변경하지 못하는 코드에 속한다면 의미를 명료하게 밝히는 주석이 유용하다.&lt;/li&gt;
  &lt;li&gt;결과를 경고하는 주석 - ex) 특정 테스트 케이스를 꺼야 하는 이유를 설명하는 주석&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 여유 시간이 충분하지 않다면 실행하지 마십시오.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;_testWithReallyBigFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;writeLinesToFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makeStandardHttpDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// SimpleDateFormat은 스레드에 안전하지 못하다.&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 따라서 각 인스턴스를 독립적으로 생성해야 한다.&lt;/span&gt;
	&lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;EEE, dd MMM yyyy HH:mm:ss z&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTimeZone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;TimeZone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTimeZone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GMT&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;TODO 주석 - ‘앞으로 할 일’을 // TODO 주석으로 남겨두면 편하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// TODO-MdM 현재 필요하지 않다.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 체크아웃 모델을 도입하면 함수가 필요 없다.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VersionInfo&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makeVersion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;중요성을 강조하는 주석&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listItemContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 여기서 trim은 정말 중요하다. trim 함수는 문자열에서 시작 공백을 제거한다.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 문자열에 시작 공백이 있으면 다른 문자열로 인식되기 때문이다.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;주절거리는 주석 - 특별한 이유 없이 의무감으로 혹은 프로세스에서 하라고 하니까 마지못해 주석을 단다면 전적으로 시간낭비다. 주석을 달기로 결정했다면 충분한 시간을 들여 최고의 주석을 달도록 한다.&lt;/li&gt;
  &lt;li&gt;의무적으로 다는 주석 - 모든 함수에 Javadocs를 달거나 모든 변수에 주석을 달아야 한다는 규칙은 어리석기 그지없다.&lt;/li&gt;
  &lt;li&gt;함수나 변수로 표현할 수 있다면 주석을 달지 마라&lt;/li&gt;
  &lt;li&gt;닫는 괄호에 다는 주석 - 닫는 괄호에 주석을 달아야겠다는 생각이 든다면 대신에 함수를 줄이려 시도하자.&lt;/li&gt;
  &lt;li&gt;공로를 돌리거나 저자를 표시하는 주석 - 소스 코드 관리 시스템은 누가 언제 무엇을 추가했는지 귀신처럼 기억한다. 저자 이름으로 코드를 오염시킬 필요가 없다.&lt;/li&gt;
  &lt;li&gt;주석으로 처리한 코드 - 주석으로 처리된 코드는 다른 사람들이 지우기를 주저한다. 그래서 질 나쁜 와인병 바닥에 앙금이 쌓이듯 쓸모 없는 코드가 점차 쌓여간다.&lt;/li&gt;
  &lt;li&gt;전역 정보 - 주석을 달아야 한다면 근처에 있는 코드만 기술하라. 함수 자체는 포트 기본값을 전혀 통제하지 못한다. 즉, 포트 기본값을 설정하는 코드가 변해도 아래 주석이 변하리라는 보장은 전혀 없다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/**
* 적합성 테스트가 동작하는 포트: 기본값은 &amp;lt;b&amp;gt;8082&amp;lt;/b&amp;gt;
*
* @param fitnessPort
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setFitnessPort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fitnessPort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fitnessePort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fitnessePort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;오늘 읽은 소감은? 떠오르는 생각을 가볍게 적어보세요&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이번 장을 읽으면서 얼마나 찔렸는지 모른다. 가장 찔렸던 부분은 의무적으로 다는 주석과 중복되는 주석! 혹시나 내 코드를 이해하지 못할까봐 의무적으로 달았던 주석이 많았는데 저자의 말이 맞는 것 같다. 이해할 수 없게 코드를 짰기 때문에 주석을 다는 것이라고!&lt;/li&gt;
  &lt;li&gt;주석을 어떻게 달까 고민하는 시간도 많았는데 주석이 필요 없는 방향으로 변수명과 함수명을 짓는데 더 많은 시간을 쏟아야겠다.&lt;/li&gt;
  &lt;li&gt;보통 글을 작성할 때 여러번 다듬고 이 말을 여기에 써도 되는가를 고민하게 된다. 왜냐면 남들이 읽기 때문이다! 코드나 주석을 작성하는 것도 결국은 기록이 남고 남들이 읽는데 왜 신중하지 않게 작성했지?라는 생각이 든다. 주석 하나도 고민하면서 남기자.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;궁금한 내용이 있거나, 잘 이해되지 않는 내용이 있다면 적어보세요.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이번 장은 이해가 잘됐다! 😁&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>노개북 - 클린코드 시작</title>
   <link href="https://thehue.github.io/2022/04/22/%EB%85%B8%EA%B0%9C%EB%B6%81-%ED%81%B4%EB%A6%B0%EC%BD%94%EB%93%9C-%EC%8B%9C%EC%9E%91"/>
   <updated>2022-04-22T00:00:00+09:00</updated>
   <id>https://thehue.github.io/2022/04/22/노개북 - 클린코드 시작</id>
   <content type="html">&lt;h4 id=&quot;첫번째-과제---책-구매-인증&quot;&gt;첫번째 과제 - 책 구매 인증&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45552388/164722540-7c204312-0f29-4c2c-80a4-cc9e9fd8cdf5.jpeg&quot; alt=&quot;클린코드_인증&quot; /&gt; &lt;em&gt;Photo by thehue&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;클린코드 책 구매 인증합니다!&lt;/p&gt;

&lt;p&gt;노마드 개발자 북클럽에 가입하게 되었습니다. 개발자의 필독서인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;클린코드&lt;/code&gt;라는 책을 3주동안 읽고 TIL을 공유하는 학습 프로그램입니다.&lt;br /&gt;
 최근에 굉장히 읽기 힘든 코드를 유지 보수한적이 있는데, 코드를 수정하면서 기존 코드가 굉장히 잘못 짜여있다는건 알겠는데 어떤 방향으로 수정해야 옳은 것인지에 대해 오랫동안 고민한 적이 있습니다. 클린코드 책이 저에게 좋은 가이드라인이 되길 바랍니다.&lt;/p&gt;

&lt;h4 id=&quot;북클럽을-통해-얻고-싶은-것&quot;&gt;북클럽을 통해 얻고 싶은 것&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;글 쓰기 실력&lt;/li&gt;
  &lt;li&gt;꾸준히 무언가를 하는 습관&lt;/li&gt;
  &lt;li&gt;공부한 것을 정리하는 습관&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 

</feed>
